// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  email          String         @unique
  firstName      String
  lastName       String
  role           String         @default("user")
  phoneNumber    String?
  description    String?
  profilePicture String?
  password       String
  CreatedRoutes  Route[]        @relation("Created")
  JoinedRoutes   Route[]
  Comments       Comment[]
  Notifications  Notification[]
}

model Route {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  name             String    @unique
  description      String
  coverPhoto       String
  difficulty       String
  type             String
  distance         String
  length           String
  groupTour        Boolean
  approved         Boolean?
  track            String?
  meetingLocation  Float[]
  meetingTime      String?
  price            String?
  stripePrice      String?
  startDate        String?
  endDate          String?
  maxParticipants  Int?
  CreatorUser      User      @relation("Created", fields: [userId], references: [id])
  userId           Int
  ParticipantUsers User[]
  Comments         Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Route     Route    @relation(fields: [routeId], references: [id])
  routeId   Int
}

model Notification {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  content          String
  read             Boolean
  redirectLocation String?
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
}
